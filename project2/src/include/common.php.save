<?php
include '/../vendor/autoload.php';
// Init our repositories
$clientRepository = new ClientRepository::instanceofLeague\OAuth2\Server\Repositories\ClientRepositoryInterface(); 
// instance of ClientRepositoryInterface
/*$scopeRepository = new ScopeRepository(); 
// instance of ScopeRepositoryInterface
$accessTokenRepository = new AccessTokenRepository(); 
// instance of AccessTokenRepositoryInterface
$userRepository = new UserRepository(); 
// instance of UserRepositoryInterface
$refreshTokenRepository = new RefreshTokenRepository(); 
// instance of RefreshTokenRepositoryInterface
// Path to public and private keys
//$privateKey = 'file://path/to/private.key';
//$privateKey = new CryptKey('file://path/to/private.key', 'passphrase'); // if private key has a pass phrase
//$encryptionKey = 'lxZFUEsBCJ2Yb14IF2ygAHI5N4+ZAUXXaSeeJm6+twsUmIen'; // generate using base64_encode(random_bytes(32))

// Setup the authorization server
/*$server = new \League\OAuth2\Server\AuthorizationServer(	$clientRepository	,    
								$accessTokenRepository	,    
								$scopeRepository	,    
								$privateKey		,    
								$encryptionKey
							);
$grant = new \League\OAuth2\Server\Grant\PasswordGrant(    	$userRepository		,     
								$refreshTokenRepository
							);
$grant->setRefreshTokenTTL(new \DateInterval('P1M')); // refresh tokens will expire after 1 month
// Enable the password grant on the server
$server->enableGrantType(    	$grant	,    
				new \DateInterval('PT1H')) // access tokens will expire after 1 hour);*/
?>
